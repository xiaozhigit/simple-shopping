<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaozhi.shopping.dao.CustomFieldsMapper">
  <resultMap id="BaseResultMap" type="com.xiaozhi.shopping.model.CustomFields">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="field_order" jdbcType="TINYINT" property="fieldOrder" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="placeholder" jdbcType="VARCHAR" property="placeholder" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="required" jdbcType="CHAR" property="required" />
    <result column="active" jdbcType="CHAR" property="active" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaozhi.shopping.model.CustomFields">
    <result column="selections" jdbcType="LONGVARCHAR" property="selections" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, field_order, name, placeholder, description, required, active
  </sql>
  <sql id="Blob_Column_List">
    selections
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiaozhi.shopping.model.CustomFieldsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from custom_fields
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xiaozhi.shopping.model.CustomFieldsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from custom_fields
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from custom_fields
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from custom_fields
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaozhi.shopping.model.CustomFieldsExample">
    delete from custom_fields
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaozhi.shopping.model.CustomFields">
    insert into custom_fields (id, type, field_order, 
      name, placeholder, description, 
      required, active, selections
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=CHAR}, #{fieldOrder,jdbcType=TINYINT}, 
      #{name,jdbcType=VARCHAR}, #{placeholder,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{required,jdbcType=CHAR}, #{active,jdbcType=CHAR}, #{selections,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaozhi.shopping.model.CustomFields">
    insert into custom_fields
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="fieldOrder != null">
        field_order,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="placeholder != null">
        placeholder,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="required != null">
        required,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="selections != null">
        selections,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="fieldOrder != null">
        #{fieldOrder,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="placeholder != null">
        #{placeholder,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="required != null">
        #{required,jdbcType=CHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=CHAR},
      </if>
      <if test="selections != null">
        #{selections,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaozhi.shopping.model.CustomFieldsExample" resultType="java.lang.Long">
    select count(*) from custom_fields
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update custom_fields
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.fieldOrder != null">
        field_order = #{record.fieldOrder,jdbcType=TINYINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.placeholder != null">
        placeholder = #{record.placeholder,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.required != null">
        required = #{record.required,jdbcType=CHAR},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=CHAR},
      </if>
      <if test="record.selections != null">
        selections = #{record.selections,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update custom_fields
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR},
      field_order = #{record.fieldOrder,jdbcType=TINYINT},
      name = #{record.name,jdbcType=VARCHAR},
      placeholder = #{record.placeholder,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      required = #{record.required,jdbcType=CHAR},
      active = #{record.active,jdbcType=CHAR},
      selections = #{record.selections,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update custom_fields
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR},
      field_order = #{record.fieldOrder,jdbcType=TINYINT},
      name = #{record.name,jdbcType=VARCHAR},
      placeholder = #{record.placeholder,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      required = #{record.required,jdbcType=CHAR},
      active = #{record.active,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaozhi.shopping.model.CustomFields">
    update custom_fields
    <set>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="fieldOrder != null">
        field_order = #{fieldOrder,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="placeholder != null">
        placeholder = #{placeholder,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="required != null">
        required = #{required,jdbcType=CHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=CHAR},
      </if>
      <if test="selections != null">
        selections = #{selections,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaozhi.shopping.model.CustomFields">
    update custom_fields
    set type = #{type,jdbcType=CHAR},
      field_order = #{fieldOrder,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      placeholder = #{placeholder,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      required = #{required,jdbcType=CHAR},
      active = #{active,jdbcType=CHAR},
      selections = #{selections,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaozhi.shopping.model.CustomFields">
    update custom_fields
    set type = #{type,jdbcType=CHAR},
      field_order = #{fieldOrder,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      placeholder = #{placeholder,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      required = #{required,jdbcType=CHAR},
      active = #{active,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>