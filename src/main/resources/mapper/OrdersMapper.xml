<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaozhi.shopping.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.xiaozhi.shopping.model.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="shipping_option" jdbcType="VARCHAR" property="shippingOption" />
    <result column="order_notes" jdbcType="VARCHAR" property="orderNotes" />
    <result column="order_status" jdbcType="CHAR" property="orderStatus" />
    <result column="total" jdbcType="REAL" property="total" />
    <result column="taxes" jdbcType="REAL" property="taxes" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaozhi.shopping.model.OrdersWithBLOBs">
    <result column="order_summary" jdbcType="LONGVARCHAR" property="orderSummary" />
    <result column="custom_fields" jdbcType="LONGVARCHAR" property="customFields" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, ip, email, company, phone,zip,state,city,address, shipping_option, order_notes, order_status,
    total, taxes, create_time
  </sql>
  <sql id="Blob_Column_List">
    order_summary, custom_fields
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiaozhi.shopping.model.OrdersExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xiaozhi.shopping.model.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaozhi.shopping.model.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaozhi.shopping.model.OrdersWithBLOBs" useGeneratedKeys="true" keyProperty="id">
    insert into orders (name, ip,
      email, company, phone, 
      shipping_option, order_notes, order_status, 
      total, taxes, create_time, 
      order_summary, custom_fields)
    values (#{name,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{shippingOption,jdbcType=VARCHAR}, #{orderNotes,jdbcType=VARCHAR}, #{orderStatus,jdbcType=CHAR}, 
      #{total,jdbcType=REAL}, #{taxes,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{orderSummary,jdbcType=LONGVARCHAR}, #{customFields,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaozhi.shopping.model.OrdersWithBLOBs" useGeneratedKeys="true" keyProperty="id">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="zip != null">
        zip,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="shippingOption != null">
        shipping_option,
      </if>
      <if test="orderNotes != null">
        order_notes,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="taxes != null">
        taxes,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="orderSummary != null">
        order_summary,
      </if>
      <if test="customFields != null">
        custom_fields,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="zip != null">
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="shippingOption != null">
        #{shippingOption,jdbcType=VARCHAR},
      </if>
      <if test="orderNotes != null">
        #{orderNotes,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=CHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=REAL},
      </if>
      <if test="taxes != null">
        #{taxes,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderSummary != null">
        #{orderSummary,jdbcType=LONGVARCHAR},
      </if>
      <if test="customFields != null">
        #{customFields,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaozhi.shopping.model.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.shippingOption != null">
        shipping_option = #{record.shippingOption,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNotes != null">
        order_notes = #{record.orderNotes,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=CHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=REAL},
      </if>
      <if test="record.taxes != null">
        taxes = #{record.taxes,jdbcType=REAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderSummary != null">
        order_summary = #{record.orderSummary,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.customFields != null">
        custom_fields = #{record.customFields,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update orders
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      shipping_option = #{record.shippingOption,jdbcType=VARCHAR},
      order_notes = #{record.orderNotes,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=CHAR},
      total = #{record.total,jdbcType=REAL},
      taxes = #{record.taxes,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      order_summary = #{record.orderSummary,jdbcType=LONGVARCHAR},
      custom_fields = #{record.customFields,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      shipping_option = #{record.shippingOption,jdbcType=VARCHAR},
      order_notes = #{record.orderNotes,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=CHAR},
      total = #{record.total,jdbcType=REAL},
      taxes = #{record.taxes,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaozhi.shopping.model.OrdersWithBLOBs">
    update orders
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="zip != null">
        zip = #{zip,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="shippingOption != null">
        shipping_option = #{shippingOption,jdbcType=VARCHAR},
      </if>
      <if test="orderNotes != null">
        order_notes = #{orderNotes,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=CHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=REAL},
      </if>
      <if test="taxes != null">
        taxes = #{taxes,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderSummary != null">
        order_summary = #{orderSummary,jdbcType=LONGVARCHAR},
      </if>
      <if test="customFields != null">
        custom_fields = #{customFields,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaozhi.shopping.model.OrdersWithBLOBs">
    update orders
    set name = #{name,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      shipping_option = #{shippingOption,jdbcType=VARCHAR},
      order_notes = #{orderNotes,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=CHAR},
      total = #{total,jdbcType=REAL},
      taxes = #{taxes,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      order_summary = #{orderSummary,jdbcType=LONGVARCHAR},
      custom_fields = #{customFields,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaozhi.shopping.model.Orders">
    update orders
    set name = #{name,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      shipping_option = #{shippingOption,jdbcType=VARCHAR},
      order_notes = #{orderNotes,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=CHAR},
      total = #{total,jdbcType=REAL},
      taxes = #{taxes,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>