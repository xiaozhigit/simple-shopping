<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaozhi.shopping.dao.OrderItemsMapper">
  <resultMap id="BaseResultMap" type="com.xiaozhi.shopping.model.OrderItems">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderid" jdbcType="INTEGER" property="orderid" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="productName"  property="productName" />
    <result column="quantity" jdbcType="REAL" property="quantity" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="tax" jdbcType="REAL" property="tax" />
    <result column="sub_total" jdbcType="REAL" property="subTotal" />
    <result column="total_tax" jdbcType="REAL" property="totalTax" />
    <result column="total" jdbcType="REAL" property="total" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oi.id, oi.orderid, oi.product_id, oi.quantity, oi.price, oi.tax, oi.sub_total, oi.total_tax, oi.total
  </sql>
  <select id="selectByExample" parameterType="com.xiaozhi.shopping.model.OrderItemsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,(select name from products where id=oi.product_id) as productName
    from order_items oi
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    ,(select name from products where id=oi.product_id) as productName
    from order_items oi
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_items
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaozhi.shopping.model.OrderItemsExample">
    delete from order_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaozhi.shopping.model.OrderItems">
    insert into order_items (id, orderid, product_id, 
      quantity, price, tax, sub_total, 
      total_tax, total)
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=REAL}, #{price,jdbcType=REAL}, #{tax,jdbcType=REAL}, #{subTotal,jdbcType=REAL}, 
      #{totalTax,jdbcType=REAL}, #{total,jdbcType=REAL})
  </insert>
  <insert id="insertPatch" parameterType="java.util.List">
    insert into order_items (id, orderid, product_id, quantity, price, tax, sub_total, total_tax, total)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.orderid,jdbcType=INTEGER}, #{item.productId,jdbcType=INTEGER},
      #{item.quantity,jdbcType=REAL}, #{item.price,jdbcType=REAL}, #{item.tax,jdbcType=REAL}, #{item.subTotal,jdbcType=REAL},
      #{item.totalTax,jdbcType=REAL}, #{item.total,jdbcType=REAL}
      )
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.xiaozhi.shopping.model.OrderItems">
    insert into order_items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="tax != null">
        tax,
      </if>
      <if test="subTotal != null">
        sub_total,
      </if>
      <if test="totalTax != null">
        total_tax,
      </if>
      <if test="total != null">
        total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=REAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="tax != null">
        #{tax,jdbcType=REAL},
      </if>
      <if test="subTotal != null">
        #{subTotal,jdbcType=REAL},
      </if>
      <if test="totalTax != null">
        #{totalTax,jdbcType=REAL},
      </if>
      <if test="total != null">
        #{total,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaozhi.shopping.model.OrderItemsExample" resultType="java.lang.Long">
    select count(*) from order_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_items
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=REAL},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.tax != null">
        tax = #{record.tax,jdbcType=REAL},
      </if>
      <if test="record.subTotal != null">
        sub_total = #{record.subTotal,jdbcType=REAL},
      </if>
      <if test="record.totalTax != null">
        total_tax = #{record.totalTax,jdbcType=REAL},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_items
    set id = #{record.id,jdbcType=INTEGER},
      orderid = #{record.orderid,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=REAL},
      price = #{record.price,jdbcType=REAL},
      tax = #{record.tax,jdbcType=REAL},
      sub_total = #{record.subTotal,jdbcType=REAL},
      total_tax = #{record.totalTax,jdbcType=REAL},
      total = #{record.total,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaozhi.shopping.model.OrderItems">
    update order_items
    <set>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=REAL},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="tax != null">
        tax = #{tax,jdbcType=REAL},
      </if>
      <if test="subTotal != null">
        sub_total = #{subTotal,jdbcType=REAL},
      </if>
      <if test="totalTax != null">
        total_tax = #{totalTax,jdbcType=REAL},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaozhi.shopping.model.OrderItems">
    update order_items
    set orderid = #{orderid,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=REAL},
      price = #{price,jdbcType=REAL},
      tax = #{tax,jdbcType=REAL},
      sub_total = #{subTotal,jdbcType=REAL},
      total_tax = #{totalTax,jdbcType=REAL},
      total = #{total,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>